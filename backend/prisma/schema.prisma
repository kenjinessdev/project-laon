generator client {
  provider  = "prisma-client-py"
  interface = "asyncio"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid()) @db.Uuid
  first_name        String    @db.VarChar(100)
  middle_name       String    @db.VarChar(100)
  last_name         String    @db.VarChar(100)
  suffix            String    @db.VarChar(100)
  profile_image_url String?   @db.Text
  email             String    @unique @db.VarChar(100)
  password          String    @db.VarChar(128)
  phone_number      String    @unique @db.VarChar(50)
  gender            String    @db.VarChar(50)
  role              Role
  birthday          DateTime
  created_at        DateTime  @default(now())
  Address           Address[]

  @@map("users")
}

enum Role {
  farmer
  customer
}

model Address {
  id          Int     @id @default(autoincrement()) @map("address_id")
  user_id     String  @db.Uuid
  street      String  @db.Text
  street2     String? @db.Text // âœ… Make optional if it's not always used
  city        String  @db.VarChar(50)
  region      String  @db.VarChar(50)
  postal_code String  @db.VarChar(20)
  is_primary  Boolean

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("addresses")
}
