// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { FacebookLoginApiV1AuthFacebookGetData, FacebookLoginApiV1AuthFacebookGetResponses, FacebookLoginApiV1AuthFacebookGetErrors, FacebookCallbackApiV1AuthFacebookCallbackGetData, FacebookCallbackApiV1AuthFacebookCallbackGetResponses, FacebookCallbackApiV1AuthFacebookCallbackGetErrors, GoogleLoginApiV1AuthGoogleGetData, GoogleLoginApiV1AuthGoogleGetResponses, GoogleLoginApiV1AuthGoogleGetErrors, GoogleCallbackApiV1AuthGoogleCallbackGetData, GoogleCallbackApiV1AuthGoogleCallbackGetResponses, GoogleCallbackApiV1AuthGoogleCallbackGetErrors, RegisterApiV1AuthRegisterPostData, RegisterApiV1AuthRegisterPostResponses, RegisterApiV1AuthRegisterPostErrors, LoginApiV1AuthLoginPostData, LoginApiV1AuthLoginPostResponses, LoginApiV1AuthLoginPostErrors, RefreshTokenApiV1AuthRefreshPostData, RefreshTokenApiV1AuthRefreshPostResponses, RefreshTokenApiV1AuthRefreshPostErrors, MyProductsApiV1FarmerProductsGetData, MyProductsApiV1FarmerProductsGetResponses, MyProductsApiV1FarmerProductsGetErrors, DeleteProductApiV1FarmerProductProductIdDeleteData, DeleteProductApiV1FarmerProductProductIdDeleteResponses, DeleteProductApiV1FarmerProductProductIdDeleteErrors, ViewProductApiV1FarmerProductProductIdGetData, ViewProductApiV1FarmerProductProductIdGetResponses, ViewProductApiV1FarmerProductProductIdGetErrors, UpdateProductApiV1FarmerProductProductIdPatchData, UpdateProductApiV1FarmerProductProductIdPatchResponses, UpdateProductApiV1FarmerProductProductIdPatchErrors, CreateProductApiV1FarmerProductPostData, CreateProductApiV1FarmerProductPostResponses, CreateProductApiV1FarmerProductPostErrors, UploadProductImageApiV1FarmerProductProductIdImagesPostData, UploadProductImageApiV1FarmerProductProductIdImagesPostResponses, UploadProductImageApiV1FarmerProductProductIdImagesPostErrors, DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteData, DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteResponses, DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteErrors, UpdateProductStatusApiV1FarmerProductProductIdStatusPatchData, UpdateProductStatusApiV1FarmerProductProductIdStatusPatchResponses, UpdateProductStatusApiV1FarmerProductProductIdStatusPatchErrors, OrdersApiV1FarmerOrdersGetData, OrdersApiV1FarmerOrdersGetResponses, OrdersApiV1FarmerOrdersGetErrors, AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostData, AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostResponses, AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostErrors, UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchData, UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchResponses, UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchErrors, FarmerDashboardApiV1FarmerDashboardGetData, FarmerDashboardApiV1FarmerDashboardGetResponses, FarmerDashboardApiV1FarmerDashboardGetErrors, AddToCartApiV1CustomerAddToCartPostData, AddToCartApiV1CustomerAddToCartPostResponses, AddToCartApiV1CustomerAddToCartPostErrors, UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchData, UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchResponses, UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchErrors, DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteData, DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteResponses, DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteErrors, GetCartApiV1CustomerCartGetData, GetCartApiV1CustomerCartGetResponses, GetCartApiV1CustomerCartGetErrors, CheckoutApiV1CustomerCheckoutPostData, CheckoutApiV1CustomerCheckoutPostResponses, CheckoutApiV1CustomerCheckoutPostErrors, OrdersApiV1CustomerOrdersGetData, OrdersApiV1CustomerOrdersGetResponses, OrdersApiV1CustomerOrdersGetErrors, GetOrderApiV1CustomerOrdersOrderIdGetData, GetOrderApiV1CustomerOrdersOrderIdGetResponses, GetOrderApiV1CustomerOrdersOrderIdGetErrors, CancelOrderApiV1CustomerOrdersOrderIdCancelPostData, CancelOrderApiV1CustomerOrdersOrderIdCancelPostResponses, CancelOrderApiV1CustomerOrdersOrderIdCancelPostErrors, ConfirmOrderApiV1CustomerOrdersOrderIdPayPostData, ConfirmOrderApiV1CustomerOrdersOrderIdPayPostResponses, ConfirmOrderApiV1CustomerOrdersOrderIdPayPostErrors, ReviewOrderApiV1CustomerOrdersOrderIdReviewPostData, ReviewOrderApiV1CustomerOrdersOrderIdReviewPostResponses, ReviewOrderApiV1CustomerOrdersOrderIdReviewPostErrors, FarmerDashboardApiV1CustomerDashboardGetData, FarmerDashboardApiV1CustomerDashboardGetResponses, FarmerDashboardApiV1CustomerDashboardGetErrors, GetMeApiV1UsersMeGetData, GetMeApiV1UsersMeGetResponses, GetMeApiV1UsersMeGetErrors, UpdateProfileApiV1UsersMePatchData, UpdateProfileApiV1UsersMePatchResponses, UpdateProfileApiV1UsersMePatchErrors, ChangePasswordApiV1UsersMePasswordPatchData, ChangePasswordApiV1UsersMePasswordPatchResponses, ChangePasswordApiV1UsersMePasswordPatchErrors, CreateAddressApiV1UsersMeAddressPostData, CreateAddressApiV1UsersMeAddressPostResponses, CreateAddressApiV1UsersMeAddressPostErrors, DeleteAddressApiV1UsersMeAddressAddressIdDeleteData, DeleteAddressApiV1UsersMeAddressAddressIdDeleteResponses, DeleteAddressApiV1UsersMeAddressAddressIdDeleteErrors, UpdateAddressApiV1UsersMeAddressAddressIdPatchData, UpdateAddressApiV1UsersMeAddressAddressIdPatchResponses, UpdateAddressApiV1UsersMeAddressAddressIdPatchErrors, AddAvatarApiV1UsersMeAvatarPostData, AddAvatarApiV1UsersMeAvatarPostResponses, AddAvatarApiV1UsersMeAvatarPostErrors, GetProductsApiV1ProductsGetData, GetProductsApiV1ProductsGetResponses, GetProductsApiV1ProductsGetErrors, SendNotificationApiV1SendNotificationPostData, SendNotificationApiV1SendNotificationPostResponses, SendNotificationApiV1SendNotificationPostErrors, V1ApiV1GetData, V1ApiV1GetResponses, V1ApiV1GetErrors, ReadRootGetData, ReadRootGetResponses, ReadRootGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Default {
    /**
     * Start Facebook OAuth2 flow
     * Redirects the user to Facebook for authentication.
     */
    public static facebookLoginApiV1AuthFacebookGet<ThrowOnError extends boolean = false>(options?: Options<FacebookLoginApiV1AuthFacebookGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<FacebookLoginApiV1AuthFacebookGetResponses, FacebookLoginApiV1AuthFacebookGetErrors, ThrowOnError>({
            url: '/api/v1/auth/facebook',
            ...options
        });
    }
    
    /**
     * Facebook Callback
     */
    public static facebookCallbackApiV1AuthFacebookCallbackGet<ThrowOnError extends boolean = false>(options?: Options<FacebookCallbackApiV1AuthFacebookCallbackGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<FacebookCallbackApiV1AuthFacebookCallbackGetResponses, FacebookCallbackApiV1AuthFacebookCallbackGetErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/auth/facebook/callback',
            ...options
        });
    }
    
    /**
     * Google Login
     */
    public static googleLoginApiV1AuthGoogleGet<ThrowOnError extends boolean = false>(options?: Options<GoogleLoginApiV1AuthGoogleGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GoogleLoginApiV1AuthGoogleGetResponses, GoogleLoginApiV1AuthGoogleGetErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/auth/google',
            ...options
        });
    }
    
    /**
     * Google Callback
     */
    public static googleCallbackApiV1AuthGoogleCallbackGet<ThrowOnError extends boolean = false>(options?: Options<GoogleCallbackApiV1AuthGoogleCallbackGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GoogleCallbackApiV1AuthGoogleCallbackGetResponses, GoogleCallbackApiV1AuthGoogleCallbackGetErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/auth/google/callback',
            ...options
        });
    }
    
    /**
     * Register
     */
    public static registerApiV1AuthRegisterPost<ThrowOnError extends boolean = false>(options: Options<RegisterApiV1AuthRegisterPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<RegisterApiV1AuthRegisterPostResponses, RegisterApiV1AuthRegisterPostErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/auth/register',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Login
     */
    public static loginApiV1AuthLoginPost<ThrowOnError extends boolean = false>(options: Options<LoginApiV1AuthLoginPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<LoginApiV1AuthLoginPostResponses, LoginApiV1AuthLoginPostErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/auth/login',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Refresh Token
     */
    public static refreshTokenApiV1AuthRefreshPost<ThrowOnError extends boolean = false>(options?: Options<RefreshTokenApiV1AuthRefreshPostData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<RefreshTokenApiV1AuthRefreshPostResponses, RefreshTokenApiV1AuthRefreshPostErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/auth/refresh',
            ...options
        });
    }
    
    /**
     * My Products
     */
    public static myProductsApiV1FarmerProductsGet<ThrowOnError extends boolean = false>(options?: Options<MyProductsApiV1FarmerProductsGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<MyProductsApiV1FarmerProductsGetResponses, MyProductsApiV1FarmerProductsGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/products',
            ...options
        });
    }
    
    /**
     * Delete Product
     */
    public static deleteProductApiV1FarmerProductProductIdDelete<ThrowOnError extends boolean = false>(options: Options<DeleteProductApiV1FarmerProductProductIdDeleteData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteProductApiV1FarmerProductProductIdDeleteResponses, DeleteProductApiV1FarmerProductProductIdDeleteErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/product/{product_id}',
            ...options
        });
    }
    
    /**
     * View Product
     */
    public static viewProductApiV1FarmerProductProductIdGet<ThrowOnError extends boolean = false>(options: Options<ViewProductApiV1FarmerProductProductIdGetData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ViewProductApiV1FarmerProductProductIdGetResponses, ViewProductApiV1FarmerProductProductIdGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/product/{product_id}',
            ...options
        });
    }
    
    /**
     * Update Product
     */
    public static updateProductApiV1FarmerProductProductIdPatch<ThrowOnError extends boolean = false>(options: Options<UpdateProductApiV1FarmerProductProductIdPatchData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<UpdateProductApiV1FarmerProductProductIdPatchResponses, UpdateProductApiV1FarmerProductProductIdPatchErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/product/{product_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Create Product
     */
    public static createProductApiV1FarmerProductPost<ThrowOnError extends boolean = false>(options: Options<CreateProductApiV1FarmerProductPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateProductApiV1FarmerProductPostResponses, CreateProductApiV1FarmerProductPostErrors, ThrowOnError>({
            ...formDataBodySerializer,
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/product',
            ...options,
            headers: {
                'Content-Type': null,
                ...options.headers
            }
        });
    }
    
    /**
     * Upload Product Image
     */
    public static uploadProductImageApiV1FarmerProductProductIdImagesPost<ThrowOnError extends boolean = false>(options: Options<UploadProductImageApiV1FarmerProductProductIdImagesPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<UploadProductImageApiV1FarmerProductProductIdImagesPostResponses, UploadProductImageApiV1FarmerProductProductIdImagesPostErrors, ThrowOnError>({
            ...formDataBodySerializer,
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/product/{product_id}/images',
            ...options,
            headers: {
                'Content-Type': null,
                ...options.headers
            }
        });
    }
    
    /**
     * Delete Product Image
     */
    public static deleteProductImageApiV1FarmerProductProductIdImagesImageIdDelete<ThrowOnError extends boolean = false>(options: Options<DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteResponses, DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/product/{product_id}/images/{image_id}',
            ...options
        });
    }
    
    /**
     * Update Product Status
     */
    public static updateProductStatusApiV1FarmerProductProductIdStatusPatch<ThrowOnError extends boolean = false>(options: Options<UpdateProductStatusApiV1FarmerProductProductIdStatusPatchData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<UpdateProductStatusApiV1FarmerProductProductIdStatusPatchResponses, UpdateProductStatusApiV1FarmerProductProductIdStatusPatchErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/product/{product_id}/status',
            ...options
        });
    }
    
    /**
     * Orders
     */
    public static ordersApiV1FarmerOrdersGet<ThrowOnError extends boolean = false>(options?: Options<OrdersApiV1FarmerOrdersGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<OrdersApiV1FarmerOrdersGetResponses, OrdersApiV1FarmerOrdersGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/orders',
            ...options
        });
    }
    
    /**
     * Accept Order
     */
    public static acceptOrderApiV1FarmerOrdersOrderIdAcceptPost<ThrowOnError extends boolean = false>(options: Options<AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostResponses, AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/orders/{order_id}/accept',
            ...options
        });
    }
    
    /**
     * Update Product Status
     */
    public static updateProductStatusApiV1FarmerOrdersOrderIdStatusPatch<ThrowOnError extends boolean = false>(options: Options<UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchResponses, UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/orders/{order_id}/status',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Farmer Dashboard
     */
    public static farmerDashboardApiV1FarmerDashboardGet<ThrowOnError extends boolean = false>(options?: Options<FarmerDashboardApiV1FarmerDashboardGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<FarmerDashboardApiV1FarmerDashboardGetResponses, FarmerDashboardApiV1FarmerDashboardGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/farmer/dashboard',
            ...options
        });
    }
    
    /**
     * Add To Cart
     */
    public static addToCartApiV1CustomerAddToCartPost<ThrowOnError extends boolean = false>(options: Options<AddToCartApiV1CustomerAddToCartPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<AddToCartApiV1CustomerAddToCartPostResponses, AddToCartApiV1CustomerAddToCartPostErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/add-to-cart',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Update Cart Item Quantity
     */
    public static updateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatch<ThrowOnError extends boolean = false>(options: Options<UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchResponses, UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/cart-items/{item_id}/quantity',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Delete Cart Item
     */
    public static deleteCartItemApiV1CustomerCartItemsItemIdDeleteDelete<ThrowOnError extends boolean = false>(options: Options<DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteResponses, DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/cart-items/{item_id}/delete',
            ...options
        });
    }
    
    /**
     * Get Cart
     */
    public static getCartApiV1CustomerCartGet<ThrowOnError extends boolean = false>(options?: Options<GetCartApiV1CustomerCartGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetCartApiV1CustomerCartGetResponses, GetCartApiV1CustomerCartGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/cart',
            ...options
        });
    }
    
    /**
     * Checkout
     */
    public static checkoutApiV1CustomerCheckoutPost<ThrowOnError extends boolean = false>(options?: Options<CheckoutApiV1CustomerCheckoutPostData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<CheckoutApiV1CustomerCheckoutPostResponses, CheckoutApiV1CustomerCheckoutPostErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/checkout',
            ...options
        });
    }
    
    /**
     * Orders
     */
    public static ordersApiV1CustomerOrdersGet<ThrowOnError extends boolean = false>(options?: Options<OrdersApiV1CustomerOrdersGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<OrdersApiV1CustomerOrdersGetResponses, OrdersApiV1CustomerOrdersGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/orders',
            ...options
        });
    }
    
    /**
     * Get Order
     */
    public static getOrderApiV1CustomerOrdersOrderIdGet<ThrowOnError extends boolean = false>(options: Options<GetOrderApiV1CustomerOrdersOrderIdGetData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetOrderApiV1CustomerOrdersOrderIdGetResponses, GetOrderApiV1CustomerOrdersOrderIdGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/orders/{order_id}',
            ...options
        });
    }
    
    /**
     * Cancel Order
     */
    public static cancelOrderApiV1CustomerOrdersOrderIdCancelPost<ThrowOnError extends boolean = false>(options: Options<CancelOrderApiV1CustomerOrdersOrderIdCancelPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CancelOrderApiV1CustomerOrdersOrderIdCancelPostResponses, CancelOrderApiV1CustomerOrdersOrderIdCancelPostErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/orders/{order_id}/cancel',
            ...options
        });
    }
    
    /**
     * Confirm Order
     */
    public static confirmOrderApiV1CustomerOrdersOrderIdPayPost<ThrowOnError extends boolean = false>(options: Options<ConfirmOrderApiV1CustomerOrdersOrderIdPayPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ConfirmOrderApiV1CustomerOrdersOrderIdPayPostResponses, ConfirmOrderApiV1CustomerOrdersOrderIdPayPostErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/orders/{order_id}/pay',
            ...options
        });
    }
    
    /**
     * Review Order
     */
    public static reviewOrderApiV1CustomerOrdersOrderIdReviewPost<ThrowOnError extends boolean = false>(options: Options<ReviewOrderApiV1CustomerOrdersOrderIdReviewPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ReviewOrderApiV1CustomerOrdersOrderIdReviewPostResponses, ReviewOrderApiV1CustomerOrdersOrderIdReviewPostErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/orders/{order_id}/review',
            ...options
        });
    }
    
    /**
     * Farmer Dashboard
     */
    public static farmerDashboardApiV1CustomerDashboardGet<ThrowOnError extends boolean = false>(options?: Options<FarmerDashboardApiV1CustomerDashboardGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<FarmerDashboardApiV1CustomerDashboardGetResponses, FarmerDashboardApiV1CustomerDashboardGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/customer/dashboard',
            ...options
        });
    }
    
    /**
     * Get Me
     */
    public static getMeApiV1UsersMeGet<ThrowOnError extends boolean = false>(options?: Options<GetMeApiV1UsersMeGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetMeApiV1UsersMeGetResponses, GetMeApiV1UsersMeGetErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/users/me',
            ...options
        });
    }
    
    /**
     * Update Profile
     */
    public static updateProfileApiV1UsersMePatch<ThrowOnError extends boolean = false>(options: Options<UpdateProfileApiV1UsersMePatchData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<UpdateProfileApiV1UsersMePatchResponses, UpdateProfileApiV1UsersMePatchErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/users/me',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Change Password
     */
    public static changePasswordApiV1UsersMePasswordPatch<ThrowOnError extends boolean = false>(options: Options<ChangePasswordApiV1UsersMePasswordPatchData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<ChangePasswordApiV1UsersMePasswordPatchResponses, ChangePasswordApiV1UsersMePasswordPatchErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/users/me/password',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Create Address
     */
    public static createAddressApiV1UsersMeAddressPost<ThrowOnError extends boolean = false>(options: Options<CreateAddressApiV1UsersMeAddressPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateAddressApiV1UsersMeAddressPostResponses, CreateAddressApiV1UsersMeAddressPostErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/users/me/address',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Delete Address
     */
    public static deleteAddressApiV1UsersMeAddressAddressIdDelete<ThrowOnError extends boolean = false>(options: Options<DeleteAddressApiV1UsersMeAddressAddressIdDeleteData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteAddressApiV1UsersMeAddressAddressIdDeleteResponses, DeleteAddressApiV1UsersMeAddressAddressIdDeleteErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/users/me/address/{address_id}',
            ...options
        });
    }
    
    /**
     * Update Address
     */
    public static updateAddressApiV1UsersMeAddressAddressIdPatch<ThrowOnError extends boolean = false>(options: Options<UpdateAddressApiV1UsersMeAddressAddressIdPatchData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<UpdateAddressApiV1UsersMeAddressAddressIdPatchResponses, UpdateAddressApiV1UsersMeAddressAddressIdPatchErrors, ThrowOnError>({
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/users/me/address/{address_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Add Avatar
     */
    public static addAvatarApiV1UsersMeAvatarPost<ThrowOnError extends boolean = false>(options: Options<AddAvatarApiV1UsersMeAvatarPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<AddAvatarApiV1UsersMeAvatarPostResponses, AddAvatarApiV1UsersMeAvatarPostErrors, ThrowOnError>({
            ...formDataBodySerializer,
            responseType: 'json',
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/api/v1/users/me/avatar',
            ...options,
            headers: {
                'Content-Type': null,
                ...options.headers
            }
        });
    }
    
    /**
     * Get Products
     */
    public static getProductsApiV1ProductsGet<ThrowOnError extends boolean = false>(options?: Options<GetProductsApiV1ProductsGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetProductsApiV1ProductsGetResponses, GetProductsApiV1ProductsGetErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/products',
            ...options
        });
    }
    
    /**
     * Send Notification
     */
    public static sendNotificationApiV1SendNotificationPost<ThrowOnError extends boolean = false>(options: Options<SendNotificationApiV1SendNotificationPostData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<SendNotificationApiV1SendNotificationPostResponses, SendNotificationApiV1SendNotificationPostErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/send-notification',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * V1
     */
    public static v1ApiV1Get<ThrowOnError extends boolean = false>(options?: Options<V1ApiV1GetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<V1ApiV1GetResponses, V1ApiV1GetErrors, ThrowOnError>({
            responseType: 'json',
            url: '/api/v1/',
            ...options
        });
    }
    
    /**
     * Read Root
     */
    public static readRootGet<ThrowOnError extends boolean = false>(options?: Options<ReadRootGetData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ReadRootGetResponses, ReadRootGetErrors, ThrowOnError>({
            responseType: 'json',
            url: '/',
            ...options
        });
    }
}