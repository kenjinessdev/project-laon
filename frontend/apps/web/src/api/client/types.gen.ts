// This file is auto-generated by @hey-api/openapi-ts

/**
 * AddToCartRequest
 */
export type AddToCartRequest = {
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Quantity
     * Quantity must be greater than 0
     */
    quantity: number;
};

/**
 * AddressIn
 */
export type AddressIn = {
    /**
     * Street
     */
    street: string;
    /**
     * Street2
     */
    street2?: string | null;
    /**
     * Barangay
     */
    barangay: string;
    /**
     * City
     */
    city: string;
    /**
     * Region
     */
    region: string;
    /**
     * Postal Code
     */
    postal_code: string;
    /**
     * User
     */
    user?: unknown | null;
    /**
     * Is Primary
     */
    is_primary: boolean;
};

/**
 * AddressUpdate
 */
export type AddressUpdate = {
    /**
     * Street
     */
    street?: string | null;
    /**
     * Street2
     */
    street2?: string | null;
    /**
     * Barangay
     */
    barangay?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Postal Code
     */
    postal_code?: string | null;
    /**
     * Is Primary
     */
    is_primary?: boolean | null;
};

/**
 * AuthenticatedUser
 */
export type AuthenticatedUser = {
    /**
     * Access Token
     */
    access_token: string;
    user: SrcModelsUserUser;
    /**
     * Token Type
     */
    token_type?: string;
};

/**
 * BadRequestErrorResponse
 */
export type BadRequestErrorResponse = {
    /**
     * Detail
     */
    detail?: string;
    /**
     * Missing Fields
     */
    missing_fields?: Array<string> | null;
    /**
     * Format Errors
     */
    format_errors?: Array<FormatError> | null;
    /**
     * Other Errors
     */
    other_errors?: Array<OtherError> | null;
};

/**
 * Body_add_avatar_api_v1_users_me_avatar_post
 */
export type BodyAddAvatarApiV1UsersMeAvatarPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * Body_create_product_api_v1_farmer_product_post
 */
export type BodyCreateProductApiV1FarmerProductPost = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Unit
     */
    unit: string;
    /**
     * Price Per Unit
     */
    price_per_unit: number;
    /**
     * Stock Quantity
     */
    stock_quantity: number;
    /**
     * Status
     */
    status: string;
    /**
     * Visibility
     */
    visibility: string;
    /**
     * Images
     */
    images?: Array<Blob | File>;
};

/**
 * Body_upload_product_image_api_v1_farmer_product__product_id__images_post
 */
export type BodyUploadProductImageApiV1FarmerProductProductIdImagesPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * CustomerOrder
 * Represents a CustomerOrder record
 */
export type CustomerOrder = {
    /**
     * Id
     */
    id: string;
    /**
     * Customer Id
     */
    customer_id: string;
    /**
     * Total Price
     */
    total_price: string;
    status: OrderStatus;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Created At
     */
    created_at: string;
    customer?: PrismaModelsUser | null;
    /**
     * Farmer Order
     */
    farmer_order?: Array<FarmerOrder> | null;
    /**
     * Order Item
     */
    order_item?: Array<OrderItem> | null;
};

/**
 * ErrorResponse
 */
export type ErrorResponse = {
    /**
     * Detail
     */
    detail: string;
    /**
     * Missing Fields
     */
    missing_fields?: Array<string> | null;
    /**
     * Format Errors
     */
    format_errors?: Array<FormatError> | null;
    /**
     * Other Errors
     */
    other_errors?: Array<OtherError> | null;
};

/**
 * FarmerOrder
 * Represents a FarmerOrder record
 */
export type FarmerOrder = {
    /**
     * Id
     */
    id: number;
    /**
     * Customer Order Id
     */
    customer_order_id: string;
    /**
     * Farmer Id
     */
    farmer_id: string;
    status: FarmerOrderStatus;
    /**
     * Subtotal
     */
    subtotal: string;
    /**
     * Created At
     */
    created_at: string;
    order?: CustomerOrder | null;
    farmer?: PrismaModelsUser | null;
    /**
     * Order Item
     */
    order_item?: Array<OrderItem> | null;
};

/**
 * FarmerOrderStatus
 */
export type FarmerOrderStatus = 'pending' | 'accepted' | 'rejected' | 'preparing' | 'ready_to_ship' | 'shipped' | 'delivered' | 'cancelled';

/**
 * FormatError
 */
export type FormatError = {
    /**
     * Field
     */
    field: string;
    /**
     * Message
     */
    message: string;
};

/**
 * LoginSchema
 */
export type LoginSchema = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * NotificationPayload
 */
export type NotificationPayload = {
    /**
     * User Id
     */
    user_id: string;
    /**
     * Actor Id
     */
    actor_id?: string | null;
    /**
     * Actor Name
     */
    actor_name?: string | null;
    /**
     * Title
     */
    title: string;
    /**
     * Message
     */
    message: string;
    type: NotificationType;
    /**
     * Data
     */
    data?: {
        [key: string]: unknown;
    } | null;
};

/**
 * NotificationType
 */
export type NotificationType = 'order_placed' | 'product_updated' | 'payment_received' | 'low_stock' | 'order_cancelled' | 'message_received' | 'bulk_order_placed';

/**
 * OAuthenticatedUser
 */
export type OAuthenticatedUser = {
    /**
     * Access Token
     */
    access_token: string;
    user: UserCreateOAuth;
    /**
     * Token Type
     */
    token_type?: string;
};

/**
 * OrderItem
 * Represents a OrderItem record
 */
export type OrderItem = {
    /**
     * Id
     */
    id: number;
    /**
     * Customer Order Id
     */
    customer_order_id: string;
    /**
     * Farmer Order Id
     */
    farmer_order_id: number;
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Quantity
     */
    quantity: number;
    /**
     * Price
     */
    price: string;
    order?: CustomerOrder | null;
    product?: PrismaModelsProduct | null;
    order_farm?: FarmerOrder | null;
};

/**
 * OrderStatus
 */
export type OrderStatus = 'pending' | 'processing' | 'paid' | 'shipped' | 'delivered' | 'cancelled' | 'failed' | 'refunded';

/**
 * OrderStatusUpdate
 */
export type OrderStatusUpdate = {
    /**
     * Status
     */
    status: string;
};

/**
 * OtherError
 */
export type OtherError = {
    /**
     * Field
     */
    field: string;
    /**
     * Message
     */
    message: string;
};

/**
 * PaginatedProducts
 */
export type PaginatedProducts = {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Take
     */
    take?: number;
    /**
     * Total
     */
    total?: number | null;
    /**
     * Body
     */
    body: Array<SrcModelsProductProduct>;
};

/**
 * PasswordChangeRequest
 */
export type PasswordChangeRequest = {
    /**
     * Current Password
     */
    current_password: string;
    /**
     * New Password
     */
    new_password: string;
};

/**
 * ProductCategory
 * Represents a ProductCategory record
 */
export type ProductCategory = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Products
     */
    products?: Array<PrismaModelsProduct> | null;
};

/**
 * ProductImage
 * Represents a ProductImage record
 */
export type ProductImage = {
    /**
     * Id
     */
    id: string;
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Image Public Url
     */
    image_public_url: string;
    /**
     * Uploaded At
     */
    uploaded_at: string;
    product?: PrismaModelsProduct | null;
};

/**
 * ProductStatus
 */
export type ProductStatus = 'draft' | 'active' | 'archived' | 'sold';

/**
 * ProductUpdate
 */
export type ProductUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Category Id
     */
    category_id?: number | null;
    /**
     * Unit
     */
    unit?: string | null;
    /**
     * Price Per Unit
     */
    price_per_unit?: number | null;
    /**
     * Stock Quantity
     */
    stock_quantity?: number | null;
    status?: ProductStatus | null;
    visibility?: Visibility | null;
};

/**
 * ProductVisibility
 */
export type ProductVisibility = 'public' | 'private';

/**
 * Review
 * Represents a Review record
 */
export type Review = {
    /**
     * Id
     */
    id: number;
    /**
     * Customer Id
     */
    customer_id: string;
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Rating
     */
    rating: number;
    /**
     * Comment
     */
    comment?: string | null;
    /**
     * Created At
     */
    created_at: string;
    customer?: PrismaModelsUser | null;
    product?: PrismaModelsProduct | null;
};

/**
 * Role
 */
export type Role = 'farmer' | 'customer';

/**
 * UpdateQuantityRequest
 */
export type UpdateQuantityRequest = {
    /**
     * Quantity
     * New quantity must be greater than 0
     */
    quantity: number;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Middle Name
     */
    middle_name?: string | null;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Suffix
     */
    suffix?: string | null;
    /**
     * Profile Image Url
     */
    profile_image_url?: string | null;
    /**
     * Email
     */
    email: string;
    /**
     * Phone Number
     */
    phone_number: string;
    /**
     * Gender
     */
    gender?: string | null;
    /**
     * Birthday
     */
    birthday: string;
    /**
     * Role
     */
    role: 'farmer' | 'customer';
    /**
     * Password
     */
    password: string;
};

/**
 * UserCreateOAuth
 */
export type UserCreateOAuth = {
    /**
     * First Name
     */
    first_name?: string | null;
    /**
     * Middle Name
     */
    middle_name?: string | null;
    /**
     * Last Name
     */
    last_name?: string | null;
    /**
     * Suffix
     */
    suffix?: string | null;
    /**
     * Profile Image Url
     */
    profile_image_url?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Phone Number
     */
    phone_number?: string | null;
    /**
     * Gender
     */
    gender?: string | null;
    /**
     * Birthday
     */
    birthday?: string | null;
    /**
     * Role
     */
    role?: ('farmer' | 'customer') | null;
    /**
     * Password
     */
    password?: string | null;
};

/**
 * UserUpdate
 */
export type UserUpdate = {
    /**
     * First Name
     */
    first_name?: string | null;
    /**
     * Middle Name
     */
    middle_name?: string | null;
    /**
     * Last Name
     */
    last_name?: string | null;
    /**
     * Suffix
     */
    suffix?: string | null;
    /**
     * Profile Image Url
     */
    profile_image_url?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Phone Number
     */
    phone_number?: string | null;
    /**
     * Gender
     */
    gender?: string | null;
    /**
     * Birthday
     */
    birthday?: string | null;
};

/**
 * ValidationErrorResponse
 */
export type ValidationErrorResponse = {
    /**
     * Detail
     */
    detail?: string;
    /**
     * Missing Fields
     */
    missing_fields?: Array<string> | null;
    /**
     * Format Errors
     */
    format_errors?: Array<FormatError> | null;
    /**
     * Other Errors
     */
    other_errors?: Array<OtherError> | null;
};

/**
 * Visibility
 */
export type Visibility = 'public' | 'private' | 'admin_only';

/**
 * Address
 * Represents a Address record
 */
export type PrismaModelsAddress = {
    /**
     * Id
     */
    id: number;
    /**
     * User Id
     */
    user_id: string;
    /**
     * Street
     */
    street: string;
    /**
     * Street2
     */
    street2?: string | null;
    /**
     * Barangay
     */
    barangay: string;
    /**
     * City
     */
    city: string;
    /**
     * Region
     */
    region: string;
    /**
     * Postal Code
     */
    postal_code: string;
    /**
     * Is Primary
     */
    is_primary: boolean;
    user?: PrismaModelsUser | null;
};

/**
 * Cart
 * Represents a Cart record
 */
export type PrismaModelsCart = {
    /**
     * Id
     */
    id: string;
    /**
     * Customer Id
     */
    customer_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Is Active
     */
    is_active: boolean;
    customer?: PrismaModelsUser | null;
    /**
     * Cart Items
     */
    cart_items?: Array<PrismaModelsCartItem> | null;
};

/**
 * CartItem
 * Represents a CartItem record
 */
export type PrismaModelsCartItem = {
    /**
     * Id
     */
    id: string;
    /**
     * Cart Id
     */
    cart_id: string;
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Quantity
     */
    quantity: number;
    /**
     * Added At
     */
    added_at: string;
    cart?: PrismaModelsCart | null;
    product?: PrismaModelsProduct | null;
};

/**
 * Product
 * Represents a Product record
 */
export type PrismaModelsProduct = {
    /**
     * Id
     */
    id: string;
    /**
     * User Id
     */
    user_id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Category Id
     */
    category_id?: number | null;
    /**
     * Unit
     */
    unit: string;
    status: ProductStatus;
    visibility: ProductVisibility;
    /**
     * Price Per Unit
     */
    price_per_unit: string;
    /**
     * Stock Quantity
     */
    stock_quantity: number;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Created At
     */
    created_at: string;
    user?: PrismaModelsUser | null;
    category?: ProductCategory | null;
    /**
     * Images
     */
    images?: Array<ProductImage> | null;
    /**
     * Reviews
     */
    reviews?: Array<Review> | null;
    /**
     * Cart Items
     */
    cart_items?: Array<PrismaModelsCartItem> | null;
    /**
     * Order Item
     */
    order_item?: Array<OrderItem> | null;
};

/**
 * User
 * Represents a User record
 */
export type PrismaModelsUser = {
    /**
     * Id
     */
    id: string;
    /**
     * First Name
     */
    first_name: string;
    /**
     * Middle Name
     */
    middle_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Suffix
     */
    suffix?: string | null;
    /**
     * Profile Image Url
     */
    profile_image_url?: string | null;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    /**
     * Phone Number
     */
    phone_number?: string | null;
    /**
     * Gender
     */
    gender?: string | null;
    role: Role;
    /**
     * Birthday
     */
    birthday: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Addresses
     */
    addresses?: Array<PrismaModelsAddress> | null;
    /**
     * Products
     */
    products?: Array<PrismaModelsProduct> | null;
    /**
     * Reviews
     */
    reviews?: Array<Review> | null;
    /**
     * Cart
     */
    cart?: Array<PrismaModelsCart> | null;
    /**
     * Order
     */
    Order?: Array<CustomerOrder> | null;
    /**
     * Orderfarm
     */
    OrderFarm?: Array<FarmerOrder> | null;
};

/**
 * Address
 */
export type SrcModelsAddressAddress = {
    /**
     * Street
     */
    street: string;
    /**
     * Street2
     */
    street2?: string | null;
    /**
     * Barangay
     */
    barangay: string;
    /**
     * City
     */
    city: string;
    /**
     * Region
     */
    region: string;
    /**
     * Postal Code
     */
    postal_code: string;
    /**
     * User
     */
    user?: unknown | null;
    /**
     * Is Primary
     */
    is_primary: boolean;
    /**
     * Id
     */
    id: number;
    /**
     * User Id
     */
    user_id: string;
};

/**
 * Cart
 */
export type SrcModelsCartCart = {
    /**
     * Is Active
     */
    is_active: boolean;
    /**
     * Id
     */
    id: string;
    /**
     * Customer Id
     */
    customer_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    customer?: SrcModelsUserUser | null;
    /**
     * Cart Items
     */
    cart_items?: Array<SrcModelsCartCartItem>;
};

/**
 * CartItem
 */
export type SrcModelsCartCartItem = {
    /**
     * Cart Id
     */
    cart_id: string;
    /**
     * Quantity
     */
    quantity: number;
    /**
     * Product Id
     */
    product_id: string;
    /**
     * Product
     */
    product?: unknown | null;
    /**
     * Id
     */
    id: string;
    /**
     * Added At
     */
    added_at: string;
};

/**
 * Product
 */
export type SrcModelsProductProduct = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Category Id
     */
    category_id?: number | null;
    /**
     * Unit
     */
    unit: string;
    /**
     * Price Per Unit
     */
    price_per_unit: number;
    /**
     * Stock Quantity
     */
    stock_quantity: number;
    status?: ProductStatus;
    visibility?: Visibility;
    /**
     * User
     */
    user?: unknown | null;
    /**
     * Images
     */
    images?: Array<unknown> | null;
    /**
     * Reviews
     */
    reviews?: Array<unknown> | null;
    /**
     * Id
     */
    id: string;
    /**
     * User Id
     */
    user_id: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * User
 */
export type SrcModelsUserUser = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Middle Name
     */
    middle_name?: string | null;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Suffix
     */
    suffix?: string | null;
    /**
     * Profile Image Url
     */
    profile_image_url?: string | null;
    /**
     * Email
     */
    email: string;
    /**
     * Phone Number
     */
    phone_number: string;
    /**
     * Gender
     */
    gender?: string | null;
    /**
     * Birthday
     */
    birthday: string;
    /**
     * Role
     */
    role: 'farmer' | 'customer';
    /**
     * Id
     */
    id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Addresses
     */
    addresses?: Array<SrcModelsAddressAddress> | null;
};

export type FacebookLoginApiV1AuthFacebookGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/facebook';
};

export type FacebookLoginApiV1AuthFacebookGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type FacebookLoginApiV1AuthFacebookGetError = FacebookLoginApiV1AuthFacebookGetErrors[keyof FacebookLoginApiV1AuthFacebookGetErrors];

export type FacebookLoginApiV1AuthFacebookGetResponses = {
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type FacebookLoginApiV1AuthFacebookGetResponse = FacebookLoginApiV1AuthFacebookGetResponses[keyof FacebookLoginApiV1AuthFacebookGetResponses];

export type FacebookCallbackApiV1AuthFacebookCallbackGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Role
         * User role to assign if creating a new account
         */
        role?: string;
    };
    url: '/api/v1/auth/facebook/callback';
};

export type FacebookCallbackApiV1AuthFacebookCallbackGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type FacebookCallbackApiV1AuthFacebookCallbackGetError = FacebookCallbackApiV1AuthFacebookCallbackGetErrors[keyof FacebookCallbackApiV1AuthFacebookCallbackGetErrors];

export type FacebookCallbackApiV1AuthFacebookCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: OAuthenticatedUser;
};

export type FacebookCallbackApiV1AuthFacebookCallbackGetResponse = FacebookCallbackApiV1AuthFacebookCallbackGetResponses[keyof FacebookCallbackApiV1AuthFacebookCallbackGetResponses];

export type GoogleLoginApiV1AuthGoogleGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Role
         */
        role?: string;
    };
    url: '/api/v1/auth/google';
};

export type GoogleLoginApiV1AuthGoogleGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type GoogleLoginApiV1AuthGoogleGetError = GoogleLoginApiV1AuthGoogleGetErrors[keyof GoogleLoginApiV1AuthGoogleGetErrors];

export type GoogleLoginApiV1AuthGoogleGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GoogleCallbackApiV1AuthGoogleCallbackGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/google/callback';
};

export type GoogleCallbackApiV1AuthGoogleCallbackGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type GoogleCallbackApiV1AuthGoogleCallbackGetError = GoogleCallbackApiV1AuthGoogleCallbackGetErrors[keyof GoogleCallbackApiV1AuthGoogleCallbackGetErrors];

export type GoogleCallbackApiV1AuthGoogleCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: OAuthenticatedUser;
};

export type GoogleCallbackApiV1AuthGoogleCallbackGetResponse = GoogleCallbackApiV1AuthGoogleCallbackGetResponses[keyof GoogleCallbackApiV1AuthGoogleCallbackGetResponses];

export type RegisterApiV1AuthRegisterPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/auth/register';
};

export type RegisterApiV1AuthRegisterPostErrors = {
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type RegisterApiV1AuthRegisterPostError = RegisterApiV1AuthRegisterPostErrors[keyof RegisterApiV1AuthRegisterPostErrors];

export type RegisterApiV1AuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    200: AuthenticatedUser;
};

export type RegisterApiV1AuthRegisterPostResponse = RegisterApiV1AuthRegisterPostResponses[keyof RegisterApiV1AuthRegisterPostResponses];

export type LoginApiV1AuthLoginPostData = {
    body: LoginSchema;
    path?: never;
    query?: never;
    url: '/api/v1/auth/login';
};

export type LoginApiV1AuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type LoginApiV1AuthLoginPostError = LoginApiV1AuthLoginPostErrors[keyof LoginApiV1AuthLoginPostErrors];

export type LoginApiV1AuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: AuthenticatedUser;
};

export type LoginApiV1AuthLoginPostResponse = LoginApiV1AuthLoginPostResponses[keyof LoginApiV1AuthLoginPostResponses];

export type RefreshTokenApiV1AuthRefreshPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/refresh';
};

export type RefreshTokenApiV1AuthRefreshPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type RefreshTokenApiV1AuthRefreshPostError = RefreshTokenApiV1AuthRefreshPostErrors[keyof RefreshTokenApiV1AuthRefreshPostErrors];

export type RefreshTokenApiV1AuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: AuthenticatedUser;
};

export type RefreshTokenApiV1AuthRefreshPostResponse = RefreshTokenApiV1AuthRefreshPostResponses[keyof RefreshTokenApiV1AuthRefreshPostResponses];

export type MyProductsApiV1FarmerProductsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Name
         */
        name?: string | null;
        /**
         * Status
         */
        status?: string | null;
        /**
         * Visibility
         */
        visibility?: string | null;
        /**
         * Min Price
         */
        min_price?: number | null;
        /**
         * Max Price
         */
        max_price?: number | null;
        /**
         * Skip
         */
        skip?: number;
        /**
         * Take
         */
        take?: number;
        /**
         * Order By
         */
        order_by?: string;
        /**
         * Order
         */
        order?: string;
    };
    url: '/api/v1/farmer/products';
};

export type MyProductsApiV1FarmerProductsGetErrors = {
    /**
     * Bad Request
     */
    400: BadRequestErrorResponse;
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type MyProductsApiV1FarmerProductsGetError = MyProductsApiV1FarmerProductsGetErrors[keyof MyProductsApiV1FarmerProductsGetErrors];

export type MyProductsApiV1FarmerProductsGetResponses = {
    /**
     * Successful Response
     */
    200: PaginatedProducts;
};

export type MyProductsApiV1FarmerProductsGetResponse = MyProductsApiV1FarmerProductsGetResponses[keyof MyProductsApiV1FarmerProductsGetResponses];

export type DeleteProductApiV1FarmerProductProductIdDeleteData = {
    body?: never;
    path: {
        /**
         * Product Id
         */
        product_id: string;
    };
    query?: never;
    url: '/api/v1/farmer/product/{product_id}';
};

export type DeleteProductApiV1FarmerProductProductIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type DeleteProductApiV1FarmerProductProductIdDeleteError = DeleteProductApiV1FarmerProductProductIdDeleteErrors[keyof DeleteProductApiV1FarmerProductProductIdDeleteErrors];

export type DeleteProductApiV1FarmerProductProductIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ViewProductApiV1FarmerProductProductIdGetData = {
    body?: never;
    path: {
        /**
         * Product Id
         */
        product_id: string;
    };
    query?: never;
    url: '/api/v1/farmer/product/{product_id}';
};

export type ViewProductApiV1FarmerProductProductIdGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type ViewProductApiV1FarmerProductProductIdGetError = ViewProductApiV1FarmerProductProductIdGetErrors[keyof ViewProductApiV1FarmerProductProductIdGetErrors];

export type ViewProductApiV1FarmerProductProductIdGetResponses = {
    /**
     * Successful Response
     */
    200: SrcModelsProductProduct;
};

export type ViewProductApiV1FarmerProductProductIdGetResponse = ViewProductApiV1FarmerProductProductIdGetResponses[keyof ViewProductApiV1FarmerProductProductIdGetResponses];

export type UpdateProductApiV1FarmerProductProductIdPatchData = {
    body: ProductUpdate;
    path: {
        /**
         * Product Id
         */
        product_id: string;
    };
    query?: never;
    url: '/api/v1/farmer/product/{product_id}';
};

export type UpdateProductApiV1FarmerProductProductIdPatchErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type UpdateProductApiV1FarmerProductProductIdPatchError = UpdateProductApiV1FarmerProductProductIdPatchErrors[keyof UpdateProductApiV1FarmerProductProductIdPatchErrors];

export type UpdateProductApiV1FarmerProductProductIdPatchResponses = {
    /**
     * Successful Response
     */
    200: SrcModelsProductProduct;
};

export type UpdateProductApiV1FarmerProductProductIdPatchResponse = UpdateProductApiV1FarmerProductProductIdPatchResponses[keyof UpdateProductApiV1FarmerProductProductIdPatchResponses];

export type CreateProductApiV1FarmerProductPostData = {
    body: BodyCreateProductApiV1FarmerProductPost;
    path?: never;
    query?: never;
    url: '/api/v1/farmer/product';
};

export type CreateProductApiV1FarmerProductPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type CreateProductApiV1FarmerProductPostError = CreateProductApiV1FarmerProductPostErrors[keyof CreateProductApiV1FarmerProductPostErrors];

export type CreateProductApiV1FarmerProductPostResponses = {
    /**
     * Successful Response
     */
    200: SrcModelsProductProduct;
};

export type CreateProductApiV1FarmerProductPostResponse = CreateProductApiV1FarmerProductPostResponses[keyof CreateProductApiV1FarmerProductPostResponses];

export type UploadProductImageApiV1FarmerProductProductIdImagesPostData = {
    body: BodyUploadProductImageApiV1FarmerProductProductIdImagesPost;
    path: {
        /**
         * Product Id
         */
        product_id: string;
    };
    query?: never;
    url: '/api/v1/farmer/product/{product_id}/images';
};

export type UploadProductImageApiV1FarmerProductProductIdImagesPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type UploadProductImageApiV1FarmerProductProductIdImagesPostError = UploadProductImageApiV1FarmerProductProductIdImagesPostErrors[keyof UploadProductImageApiV1FarmerProductProductIdImagesPostErrors];

export type UploadProductImageApiV1FarmerProductProductIdImagesPostResponses = {
    /**
     * Successful Response
     */
    200: SrcModelsProductProduct;
};

export type UploadProductImageApiV1FarmerProductProductIdImagesPostResponse = UploadProductImageApiV1FarmerProductProductIdImagesPostResponses[keyof UploadProductImageApiV1FarmerProductProductIdImagesPostResponses];

export type DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteData = {
    body?: never;
    path: {
        /**
         * Product Id
         */
        product_id: string;
        /**
         * Image Id
         */
        image_id: string;
    };
    query?: never;
    url: '/api/v1/farmer/product/{product_id}/images/{image_id}';
};

export type DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteError = DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteErrors[keyof DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteErrors];

export type DeleteProductImageApiV1FarmerProductProductIdImagesImageIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateProductStatusApiV1FarmerProductProductIdStatusPatchData = {
    body?: never;
    path: {
        /**
         * Product Id
         */
        product_id: string;
    };
    query?: never;
    url: '/api/v1/farmer/product/{product_id}/status';
};

export type UpdateProductStatusApiV1FarmerProductProductIdStatusPatchErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type UpdateProductStatusApiV1FarmerProductProductIdStatusPatchError = UpdateProductStatusApiV1FarmerProductProductIdStatusPatchErrors[keyof UpdateProductStatusApiV1FarmerProductProductIdStatusPatchErrors];

export type UpdateProductStatusApiV1FarmerProductProductIdStatusPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type OrdersApiV1FarmerOrdersGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Status
         */
        status?: string | null;
    };
    url: '/api/v1/farmer/orders';
};

export type OrdersApiV1FarmerOrdersGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type OrdersApiV1FarmerOrdersGetError = OrdersApiV1FarmerOrdersGetErrors[keyof OrdersApiV1FarmerOrdersGetErrors];

export type OrdersApiV1FarmerOrdersGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: number;
    };
    query?: never;
    url: '/api/v1/farmer/orders/{order_id}/accept';
};

export type AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostError = AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostErrors[keyof AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostErrors];

export type AcceptOrderApiV1FarmerOrdersOrderIdAcceptPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchData = {
    body: OrderStatusUpdate;
    path: {
        /**
         * Order Id
         */
        order_id: number;
    };
    query?: never;
    url: '/api/v1/farmer/orders/{order_id}/status';
};

export type UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchError = UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchErrors[keyof UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchErrors];

export type UpdateProductStatusApiV1FarmerOrdersOrderIdStatusPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type FarmerDashboardApiV1FarmerDashboardGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/farmer/dashboard';
};

export type FarmerDashboardApiV1FarmerDashboardGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type FarmerDashboardApiV1FarmerDashboardGetError = FarmerDashboardApiV1FarmerDashboardGetErrors[keyof FarmerDashboardApiV1FarmerDashboardGetErrors];

export type FarmerDashboardApiV1FarmerDashboardGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddToCartApiV1CustomerAddToCartPostData = {
    body: AddToCartRequest;
    path?: never;
    query?: never;
    url: '/api/v1/customer/add-to-cart';
};

export type AddToCartApiV1CustomerAddToCartPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type AddToCartApiV1CustomerAddToCartPostError = AddToCartApiV1CustomerAddToCartPostErrors[keyof AddToCartApiV1CustomerAddToCartPostErrors];

export type AddToCartApiV1CustomerAddToCartPostResponses = {
    /**
     * Successful Response
     */
    200: SrcModelsCartCart;
};

export type AddToCartApiV1CustomerAddToCartPostResponse = AddToCartApiV1CustomerAddToCartPostResponses[keyof AddToCartApiV1CustomerAddToCartPostResponses];

export type UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchData = {
    body: UpdateQuantityRequest;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: never;
    url: '/api/v1/customer/cart-items/{item_id}/quantity';
};

export type UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchError = UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchErrors[keyof UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchErrors];

export type UpdateCartItemQuantityApiV1CustomerCartItemsItemIdQuantityPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: never;
    url: '/api/v1/customer/cart-items/{item_id}/delete';
};

export type DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteError = DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteErrors[keyof DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteErrors];

export type DeleteCartItemApiV1CustomerCartItemsItemIdDeleteDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCartApiV1CustomerCartGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/customer/cart';
};

export type GetCartApiV1CustomerCartGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type GetCartApiV1CustomerCartGetError = GetCartApiV1CustomerCartGetErrors[keyof GetCartApiV1CustomerCartGetErrors];

export type GetCartApiV1CustomerCartGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CheckoutApiV1CustomerCheckoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/customer/checkout';
};

export type CheckoutApiV1CustomerCheckoutPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type CheckoutApiV1CustomerCheckoutPostError = CheckoutApiV1CustomerCheckoutPostErrors[keyof CheckoutApiV1CustomerCheckoutPostErrors];

export type CheckoutApiV1CustomerCheckoutPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type OrdersApiV1CustomerOrdersGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/customer/orders';
};

export type OrdersApiV1CustomerOrdersGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type OrdersApiV1CustomerOrdersGetError = OrdersApiV1CustomerOrdersGetErrors[keyof OrdersApiV1CustomerOrdersGetErrors];

export type OrdersApiV1CustomerOrdersGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetOrderApiV1CustomerOrdersOrderIdGetData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/api/v1/customer/orders/{order_id}';
};

export type GetOrderApiV1CustomerOrdersOrderIdGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type GetOrderApiV1CustomerOrdersOrderIdGetError = GetOrderApiV1CustomerOrdersOrderIdGetErrors[keyof GetOrderApiV1CustomerOrdersOrderIdGetErrors];

export type GetOrderApiV1CustomerOrdersOrderIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CancelOrderApiV1CustomerOrdersOrderIdCancelPostData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/api/v1/customer/orders/{order_id}/cancel';
};

export type CancelOrderApiV1CustomerOrdersOrderIdCancelPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type CancelOrderApiV1CustomerOrdersOrderIdCancelPostError = CancelOrderApiV1CustomerOrdersOrderIdCancelPostErrors[keyof CancelOrderApiV1CustomerOrdersOrderIdCancelPostErrors];

export type CancelOrderApiV1CustomerOrdersOrderIdCancelPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ConfirmOrderApiV1CustomerOrdersOrderIdPayPostData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/api/v1/customer/orders/{order_id}/pay';
};

export type ConfirmOrderApiV1CustomerOrdersOrderIdPayPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type ConfirmOrderApiV1CustomerOrdersOrderIdPayPostError = ConfirmOrderApiV1CustomerOrdersOrderIdPayPostErrors[keyof ConfirmOrderApiV1CustomerOrdersOrderIdPayPostErrors];

export type ConfirmOrderApiV1CustomerOrdersOrderIdPayPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReviewOrderApiV1CustomerOrdersOrderIdReviewPostData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/api/v1/customer/orders/{order_id}/review';
};

export type ReviewOrderApiV1CustomerOrdersOrderIdReviewPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type ReviewOrderApiV1CustomerOrdersOrderIdReviewPostError = ReviewOrderApiV1CustomerOrdersOrderIdReviewPostErrors[keyof ReviewOrderApiV1CustomerOrdersOrderIdReviewPostErrors];

export type ReviewOrderApiV1CustomerOrdersOrderIdReviewPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type FarmerDashboardApiV1CustomerDashboardGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/customer/dashboard';
};

export type FarmerDashboardApiV1CustomerDashboardGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type FarmerDashboardApiV1CustomerDashboardGetError = FarmerDashboardApiV1CustomerDashboardGetErrors[keyof FarmerDashboardApiV1CustomerDashboardGetErrors];

export type FarmerDashboardApiV1CustomerDashboardGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMeApiV1UsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users/me';
};

export type GetMeApiV1UsersMeGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type GetMeApiV1UsersMeGetError = GetMeApiV1UsersMeGetErrors[keyof GetMeApiV1UsersMeGetErrors];

export type GetMeApiV1UsersMeGetResponses = {
    /**
     * Successful Response
     */
    200: PrismaModelsUser;
};

export type GetMeApiV1UsersMeGetResponse = GetMeApiV1UsersMeGetResponses[keyof GetMeApiV1UsersMeGetResponses];

export type UpdateProfileApiV1UsersMePatchData = {
    body: UserUpdate;
    path?: never;
    query?: never;
    url: '/api/v1/users/me';
};

export type UpdateProfileApiV1UsersMePatchErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type UpdateProfileApiV1UsersMePatchError = UpdateProfileApiV1UsersMePatchErrors[keyof UpdateProfileApiV1UsersMePatchErrors];

export type UpdateProfileApiV1UsersMePatchResponses = {
    /**
     * Successful Response
     */
    200: PrismaModelsUser;
};

export type UpdateProfileApiV1UsersMePatchResponse = UpdateProfileApiV1UsersMePatchResponses[keyof UpdateProfileApiV1UsersMePatchResponses];

export type ChangePasswordApiV1UsersMePasswordPatchData = {
    body: PasswordChangeRequest;
    path?: never;
    query?: never;
    url: '/api/v1/users/me/password';
};

export type ChangePasswordApiV1UsersMePasswordPatchErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type ChangePasswordApiV1UsersMePasswordPatchError = ChangePasswordApiV1UsersMePasswordPatchErrors[keyof ChangePasswordApiV1UsersMePasswordPatchErrors];

export type ChangePasswordApiV1UsersMePasswordPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateAddressApiV1UsersMeAddressPostData = {
    body: AddressIn;
    path?: never;
    query?: never;
    url: '/api/v1/users/me/address';
};

export type CreateAddressApiV1UsersMeAddressPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type CreateAddressApiV1UsersMeAddressPostError = CreateAddressApiV1UsersMeAddressPostErrors[keyof CreateAddressApiV1UsersMeAddressPostErrors];

export type CreateAddressApiV1UsersMeAddressPostResponses = {
    /**
     * Successful Response
     */
    200: SrcModelsAddressAddress;
};

export type CreateAddressApiV1UsersMeAddressPostResponse = CreateAddressApiV1UsersMeAddressPostResponses[keyof CreateAddressApiV1UsersMeAddressPostResponses];

export type DeleteAddressApiV1UsersMeAddressAddressIdDeleteData = {
    body?: never;
    path: {
        /**
         * Address Id
         */
        address_id: number;
    };
    query?: never;
    url: '/api/v1/users/me/address/{address_id}';
};

export type DeleteAddressApiV1UsersMeAddressAddressIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type DeleteAddressApiV1UsersMeAddressAddressIdDeleteError = DeleteAddressApiV1UsersMeAddressAddressIdDeleteErrors[keyof DeleteAddressApiV1UsersMeAddressAddressIdDeleteErrors];

export type DeleteAddressApiV1UsersMeAddressAddressIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateAddressApiV1UsersMeAddressAddressIdPatchData = {
    body: AddressUpdate;
    path: {
        /**
         * Address Id
         */
        address_id: number;
    };
    query?: never;
    url: '/api/v1/users/me/address/{address_id}';
};

export type UpdateAddressApiV1UsersMeAddressAddressIdPatchErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type UpdateAddressApiV1UsersMeAddressAddressIdPatchError = UpdateAddressApiV1UsersMeAddressAddressIdPatchErrors[keyof UpdateAddressApiV1UsersMeAddressAddressIdPatchErrors];

export type UpdateAddressApiV1UsersMeAddressAddressIdPatchResponses = {
    /**
     * Successful Response
     */
    200: SrcModelsAddressAddress;
};

export type UpdateAddressApiV1UsersMeAddressAddressIdPatchResponse = UpdateAddressApiV1UsersMeAddressAddressIdPatchResponses[keyof UpdateAddressApiV1UsersMeAddressAddressIdPatchResponses];

export type AddAvatarApiV1UsersMeAvatarPostData = {
    body: BodyAddAvatarApiV1UsersMeAvatarPost;
    path?: never;
    query?: never;
    url: '/api/v1/users/me/avatar';
};

export type AddAvatarApiV1UsersMeAvatarPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type AddAvatarApiV1UsersMeAvatarPostError = AddAvatarApiV1UsersMeAvatarPostErrors[keyof AddAvatarApiV1UsersMeAvatarPostErrors];

export type AddAvatarApiV1UsersMeAvatarPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetProductsApiV1ProductsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Take
         */
        take?: number;
        /**
         * Search
         */
        search?: string | null;
        /**
         * Min Price
         */
        min_price?: number | null;
        /**
         * Max Price
         */
        max_price?: number | null;
        /**
         * Order By
         */
        order_by?: string;
        /**
         * Order
         */
        order?: string;
    };
    url: '/api/v1/products';
};

export type GetProductsApiV1ProductsGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type GetProductsApiV1ProductsGetError = GetProductsApiV1ProductsGetErrors[keyof GetProductsApiV1ProductsGetErrors];

export type GetProductsApiV1ProductsGetResponses = {
    /**
     * Successful Response
     */
    200: PaginatedProducts;
};

export type GetProductsApiV1ProductsGetResponse = GetProductsApiV1ProductsGetResponses[keyof GetProductsApiV1ProductsGetResponses];

export type SendNotificationApiV1SendNotificationPostData = {
    body: NotificationPayload;
    path?: never;
    query?: never;
    url: '/api/v1/send-notification';
};

export type SendNotificationApiV1SendNotificationPostErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type SendNotificationApiV1SendNotificationPostError = SendNotificationApiV1SendNotificationPostErrors[keyof SendNotificationApiV1SendNotificationPostErrors];

export type SendNotificationApiV1SendNotificationPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type V1ApiV1GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type V1ApiV1GetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type V1ApiV1GetError = V1ApiV1GetErrors[keyof V1ApiV1GetErrors];

export type V1ApiV1GetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetErrors = {
    /**
     * Validation Error
     */
    422: ValidationErrorResponse;
    /**
     * All errors return this schema
     */
    default: ErrorResponse;
};

export type ReadRootGetError = ReadRootGetErrors[keyof ReadRootGetErrors];

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseURL: 'http://localhost:8000' | (string & {});
};